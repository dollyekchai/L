Vernam Cipher

import java.util.Scanner;
public class VernamCipher
{
	public static void main(String[] args)
	{
		String output="",dec="";
		char t,k;
		int x;
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter Plaintext: ");
		String text=sc.nextLine().toLowerCase();	
		System.out.println("Enter One Time PASSWORD of length: "+text.length());
		String key=sc.nextLine().toLowerCase();
		for(int i=0;i<text.length();i++)
		{
			t=text.charAt(i);
			k=key.charAt(i);
			x=t^k;
			output+=(char)(x+96); //small 97 to 122
		}
		System.out.println("Encrypted Text is: "+output);
		for(int i=0;i<output.length();i++)
		{
			t=output.charAt(i);
			k=key.charAt(i);
			x=t^k;
			dec+=(char)(x+96);
		}
		System.out.println("Decrypted Text is: "+dec);
	}
}




2. Railfence Cipher

import java.util.Scanner;

public class RailFence {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter plaintext: ");
        String pt = sc.nextLine();
        String ct = "";
        String dt = "";
        int len = pt.length();
        
        System.out.println("Plaintext: " + pt);
        
        // Encryption
        for (int i = 0; i < len; i += 2) { // 1st row
            ct += pt.charAt(i);
        }
        for (int i = 1; i < len; i += 2) { // 2nd row
            ct += pt.charAt(i);
        }
        
        System.out.println("Cipher Text: " + ct);
        
        // Decryption
        int mid = (len + 1) / 2; // Midpoint for decryption
        for (int i = 0; i < mid; i++) {
            dt += ct.charAt(i);
            if (i + mid < len) {
                dt += ct.charAt(i + mid);
            }
        }
        
        System.out.println("Decrypted text: " + dt);
    }
}
